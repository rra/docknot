name: build

on:
  push:
    branches-ignore:
      - "debian/**"
      - "dependabot/**"
      - "pristine-tar"
      - "ubuntu/**"
      - "upstream/**"
    tags:
      - "release/*"
  pull_request:
    branches:
      - "main"

jobs:
  perl-versions:
    runs-on: ubuntu-latest
    name: List Perl versions

    outputs:
      perl-versions: ${{ steps.action.outputs.perl-versions }}

    steps:
      - id: action
        uses: perl-actions/perl-versions@v1
        with:
          since-perl: v5.24
          with-devel: false

  perl:
    runs-on: ubuntu-latest
    name: "Perl ${{ matrix.perl-version }}"
    needs: [perl-versions]

    strategy:
      fail-fast: false
      matrix:
        perl-version: ${{ fromJson(needs.perl-versions.outputs.perl-versions) }}

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    env:
      AUTHOR_TESTING: 1

    steps:
      - uses: actions/checkout@v5

      - name: Install pandoc
        run: apt-get -y --no-install-recommends install pandoc

      - uses: perl-actions/install-with-cpm@v1.9
        with:
          cpanfile: "cpanfile"
          args: "--with-suggests"
          sudo: false

      - name: Build.PL
        run: perl Build.PL

      - name: make test
        run: ./Build test
