# Package metadata for DocKnot.
#
# This file contains configuration for DocKnot used to generate
# documentation files (like README.md) and web pages.  Other documentation
# in this package is generated automatically from these files as part of
# the release process.  For more information, see DocKnot's documentation.
#
# DocKnot is available from <https://www.eyrie.org/~eagle/software/docknot/>.
#
# Copyright 2016, 2018-2022, 2024 Russ Allbery <rra@cpan.org>
#
# SPDX-License-Identifier: MIT

format: v1

name: DocKnot
maintainer: Russ Allbery <rra@cpan.org>
version: 'v8.0.1'
synopsis: Static web site and documentation generator

license:
  name: Expat
copyrights:
  - holder: Russ Allbery <rra@cpan.org>
    years: 1999-2024

build:
  type: Module::Build
distribution:
  cpan: App-DocKnot
  packaging:
    debian:
      package: docknot
      summary: |
        DocKnot is packaged in Debian 11 (bullseye) and later as docknot.
  section: web
  tarname: App-DocKnot
  version: docknot
support:
  email: rra@cpan.org
  github: rra/docknot
  web: https://www.eyrie.org/~eagle/software/docknot/
vcs:
  browse: https://git.eyrie.org/?p=web/docknot.git
  github: rra/docknot
  status:
    workflow: build
  type: Git
  url: https://git.eyrie.org/git/web/docknot.git

quote:
  author: Murphy's Fourth Corollary
  text: |
    Whenever you set out to do something, something else must be done first.

docs:
  api:
    - name: api/app-docknot
      title: App::DocKnot
    - name: api/app-docknot-command
      title: App::DocKnot::Command
    - name: api/app-docknot-config
      title: App::DocKnot::Config
    - name: api/app-docknot-dist
      title: App::DocKnot::Dist
    - name: api/app-docknot-generate
      title: App::DocKnot::Generate
    - name: api/app-docknot-release
      title: App::DocKnot::Release
    - name: api/app-docknot-spin
      title: App::DocKnot::Spin
    - name: api/app-docknot-spin-pointer
      title: App::DocKnot::Spin::Pointer
    - name: api/app-docknot-spin-rss
      title: App::DocKnot::Spin::RSS
    - name: api/app-docknot-spin-sitemap
      title: App::DocKnot::Spin::Sitemap
    - name: api/app-docknot-spin-text
      title: App::DocKnot::Spin::Text
    - name: api/app-docknot-spin-thread
      title: App::DocKnot::Spin::Thread
    - name: api/app-docknot-spin-versions
      title: App::DocKnot::Spin::Versions
    - name: api/app-docknot-update
      title: App::DocKnot::Update
    - name: api/app-docknot-util
      title: App::DocKnot::Util
  developer:
    - name: todo
      title: To-do list
  user:
    - name: docknot
      title: docknot manual page

blurb: |
  DocKnot is a static web site generator built around a macro language called
  thread, with special support for managing software releases.  In addition to
  building a web site, it can generate distribution tarballs and consistent
  human-readable software package documentation from a YAML metadata file and
  templates.  The goal is to generate both web pages and distributed
  documentation files (such as `README`) from the same source, using templates
  for consistency across multiple packages.

description: |
  In 1999, I wrote a program named `spin` that implemented an idiosyncratic
  macro language called thread.  It slowly expanded into a static web site
  generator and gained additional features to manage the journal entries, book
  reviews, RSS feeds, and software releases.  DocKnot is the latest
  incarnation.

  In addition to its static web site generator, DocKnot can use one metadata
  file as its source information and generate all the various bits of
  documentation for a software package.  This allows me to make any changes in
  one place and then regenerate the web page, included documentation, and
  other files to incorporate those changes.  It also lets me make changes to
  the templates to improve shared wording and push that out to every package I
  maintain without having to remember track those changes in each package.

  DocKnot is also slowly absorbing other tools that I use for software
  distribution and web site maintenance, such as generating distribution
  tarballs for software packages.

  DocKnot was designed and written for my personal needs, and I'm not sure it
  will be useful for anyone else.  At the least, the template files are rather
  specific to my preferences about how to write package documentation, and the
  thread macro language is highly specialized for my personal web site.  I'm
  not sure if I'll have the time to make it a more general tool.  But you're
  certainly welcome to use it if you find it useful, send pull requests to
  make it more general, or take ideas from it for your own purposes.

requirements: |
  Perl 5.24 or later and Module::Build are required to build this module.
  The following additional Perl modules are required to use it:

  * Date::Language (part of TimeDate)
  * Date::Parse (part of TimeDate)
  * File::BaseDir
  * File::ShareDir
  * Git::Repository
  * Image::Size
  * IO::Compress::Xz (part of IO-Compress-Lzma)
  * IO::Uncompress::Gunzip (part of IO-Compress)
  * IPC::Run
  * IPC::System::Simple
  * JSON::MaybeXS 1.004000 or later
  * Kwalify
  * List::SomeUtils 0.07 or later
  * Path::Iterator::Rule
  * Path::Tiny 0.101 or later
  * Perl6::Slurp
  * Pod::Thread 3.01 or later
  * Sort::Versions
  * Template (part of Template Toolkit)
  * YAML::XS 0.81 or later

test:
  lancaster: true
  suffix: |
    Capture::Tiny and File::Copy::Recursive are required to run the test
    suite.  The following additional Perl modules will be used by the test
    suite if present:

    * Devel::Cover
    * Perl::Critic::Freenode
    * Test::CPAN::Changes (part of CPAN-Changes)
    * Test::MinimumVersion
    * Test::Perl::Critic
    * Test::Pod
    * Test::Pod::Coverage
    * Test::Spelling
    * Test::Strict
    * Test::Synopsis

    All are available on CPAN.  Those tests will be skipped if the modules
    are not available.
