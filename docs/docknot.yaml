# Package metadata for DocKnot.
#
# This file contains configuration for DocKnot used to generate
# documentation files (like README.md) and web pages.  Other documentation
# in this package is generated automatically from these files as part of
# the release process.  For more information, see DocKnot's documentation.
#
# DocKnot is available from <https://www.eyrie.org/~eagle/software/docknot/>.
#
# Copyright 2016, 2018-2020 Russ Allbery <rra@cpan.org>
#
# SPDX-License-Identifier: MIT

format: v1

name: DocKnot
maintainer: Russ Allbery <rra@cpan.org>
version: '4.00'
synopsis: Package documentation generator

license:
  name: Expat
copyrights:
  - holder: Russ Allbery <rra@cpan.org>
    years: 2013-2020

build:
  type: Module::Build
distribution:
  cpan: App-DocKnot
  packaging:
    debian:
      personal: true
  section: devel
  tarname: App-DocKnot
  version: docknot
support:
  email: rra@cpan.org
  github: rra/docknot
  web: https://www.eyrie.org/~eagle/software/docknot/
vcs:
  browse: https://git.eyrie.org/?p=devel/docknot.git
  github: rra/docknot
  status:
    workflow: build
  type: Git
  url: https://git.eyrie.org/git/devel/docknot.git

docs:
  api:
    - name: api/app-docknot
      title: App::DocKnot
    - name: api/app-docknot-command
      title: App::DocKnot::Command
    - name: api/app-docknot-config
      title: App::DocKnot::Config
    - name: api/app-docknot-dist
      title: App::DocKnot::Dist
    - name: api/app-docknot-generate
      title: App::DocKnot::Generate
    - name: api/app-docknot-update
      title: App::DocKnot::Update
  user:
    - name: docknot
      title: docknot manual page

blurb: |
  DocKnot is a system for generating consistent human-readable software
  package documentation from a YAML metadata file and templates.  The goal
  is to generate both web pages and distributed documentation files (such
  as `README`) from the same source, using templates for consistency
  across multiple packages.  DocKnot also automates generating
  distribution tarballs for software packages.

description: |
  After years of maintaining a variety of small free software packages, I
  found the most tedious part of making a new release was updating the
  documentation in multiple locations.  Copyright dates would change,
  prerequisites and package descriptions would change, and I had to update
  at least the package `README` file and its web pages separately.  The
  last straw was when GitHub became popular and I wanted to provide a
  Markdown version of `README` as well, avoiding the ugly text rendering
  on the GitHub page for a package.

  This package uses one metadata file as its source information and
  generates all the various bits of documentation for a package.  This
  allows me to make any changes in one place and then just regenerate the
  web page, included documentation, and other files to incorporate those
  changes.  It also lets me make changes to the templates to improve
  shared wording and push that out to every package I maintain during its
  next release, without having to remember which changes I wanted to make.

  DocKnot is also slowly absorbing other tools that I use for software
  distribution and web site maintenance, such as generating distribution
  tarballs for software packages.

  DocKnot was designed and written for my personal needs, and I'm not sure
  it will be useful for anyone else.  At the least, the template files are
  rather specific to my preferences about how to write package
  documentation, and the web page output is in my personal thread language
  as opposed to HTML.  I'm not sure if I'll have the time to make it a
  more general tool.  But you're certainly welcome to use it if you find
  it useful, send pull requests to make it more general, or take ideas
  from it for your own purposes.

  Currently included in this package are just the App::DocKnot module and
  its submodules, a small docknot driver program, and the templates I use
  for my own software.  Over time, it may include more of my web
  publishing framework, time permitting.

requirements: |
  Perl 5.24 or later and Module::Build are required to build this module.
  The following additional Perl modules are required to use it:

  * File::BaseDir
  * File::ShareDir
  * IO::Compress::Xz (part of IO-Compress-LZMA)
  * IPC::Run
  * IPC::System::Simple
  * JSON::MaybeXS
  * Kwalify
  * List::SomeUtils
  * Perl6::Slurp
  * Template (part of Template Toolkit)
  * YAML::XS

test:
  lancaster: true
  suffix: |
    Capture::Tiny and File::Copy::Recursive are required to run the test
    suite.  The following additional Perl modules will be used by the test
    suite if present:

    * Devel::Cover
    * Perl::Critic::Freenode
    * Test::MinimumVersion
    * Test::Perl::Critic
    * Test::Pod
    * Test::Pod::Coverage
    * Test::Spelling
    * Test::Strict
    * Test::Synopsis

    All are available on CPAN.  Those tests will be skipped if the modules
    are not available.
